<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kkssj.moca.model.AccountDao">
  <select id="selectUserBykakaoId" parameterType="Integer" resultType="com.kkssj.moca.model.entity.AccountVo">
  SELECT * FROM ACCOUNT WHERE PLATFORMID=#{platformId} AND PLATFORMTYPE LIKE 'kakao'
  </select>
  <select id="selectUserBynaverId" parameterType="Integer" resultType="com.kkssj.moca.model.entity.AccountVo">
  SELECT * FROM ACCOUNT WHERE PLATFORMID=#{platformId} AND PLATFORMTYPE LIKE 'naver'
  </select>
  <insert id="insertUser" parameterType="com.kkssj.moca.model.entity.AccountVo">
  INSERT INTO ACCOUNT (NICKNAME ,PLATFORMTYPE ,PLATFORMID ,EMAIL ,PROFILEIMAGE ,THUMBNAILIMAGE) VALUES (#{nickname},#{platformType},#{platformId},#{email},#{profileImage},#{thumbnailImage})
  </insert>
  <update id="updateUserBykakaoId" parameterType="com.kkssj.moca.model.entity.AccountVo" >
  UPDATE ACCOUNT SET NICKNAME=#{nickname}, EMAIL=#{email}, PROFILEIMAGE=#{profileImage}, THUMBNAILIMAGE=#{thumbnailImage}, GENDER=#{gender}, BIRTHDAY=#{birthday}, BARISTA=#{barista} WHERE PLATFORMID=#{platformId} AND PLATFORMTYPE LIKE 'kakao'
  </update>
  <update id="updateUserBynaverId" parameterType="com.kkssj.moca.model.entity.AccountVo" >
  UPDATE ACCOUNT SET NICKNAME=#{nickname}, EMAIL=#{email}, PROFILEIMAGE=#{profileImage}, THUMBNAILIMAGE=#{thumbnailImage}, GENDER=#{gender}, BIRTHDAY=#{birthday}, BARISTA=#{barista} WHERE PLATFORMID=#{platformId} AND PLATFORMTYPE LIKE 'naver'
  </update>
  <update id="updateUserForIsResearch" parameterType="com.kkssj.moca.model.entity.AccountVo" >
  UPDATE ACCOUNT SET ISRESEARCH=${isResearch} WHERE ACCOUNT_ID=${account_id}
  </update>
  <delete id="deleteUser" parameterType="Integer" ></delete>
  <select id="selectFavoriteStoreList" parameterType="Integer" resultType="com.kkssj.moca.model.entity.StoreVo">
  	SELECT  s.STORE_ID, s.NAME, s.ADDRESS, s.AVERAGELEVEL, s.LOGOIMG
  	FROM FAVORITESTORE f JOIN STORE s ON f.STORE_ID =s.STORE_ID
  	WHERE f.ACCOUNT_ID = #{ACCOUNT_ID};
  </select>
  <select id="selectLikeStoreList" parameterType="Integer" resultType="com.kkssj.moca.model.entity.StoreVo">
	SELECT  s.STORE_ID, s.NAME, s.ADDRESS, s.AVERAGELEVEL, s.LOGOIMG
	FROM LIKESTORE l JOIN STORE s ON l.STORE_ID =s.STORE_ID
	WHERE l.ACCOUNT_ID = #{ACCOUNT_ID};
  </select>
  
  <insert id="insertLikeStore" parameterType="map" >
 	INSERT INTO LIKESTORE(STORE_ID, ACCOUNT_ID) VALUES(#{STORE_ID},#{ACCOUNT_ID});
  </insert>
  <delete id="deleteLikeStore" parameterType="map" >
  	DELETE FROM LIKESTORE WHERE STORE_ID=#{STORE_ID} AND ACCOUNT_ID = #{ACCOUNT_ID};
  </delete>
  <insert id="insertFavoriteStore" parameterType="map" >
  	INSERT INTO FAVORITESTORE(STORE_ID, ACCOUNT_ID) VALUES(#{STORE_ID},#{ACCOUNT_ID});
  </insert>
  <delete id="deleteFavoriteStore" parameterType="map" >
  	DELETE FROM FAVORITESTORE WHERE STORE_ID=#{STORE_ID} AND ACCOUNT_ID = #{ACCOUNT_ID};
  </delete>
  <select id="selectFollowerList" parameterType="Integer" resultType="com.kkssj.moca.model.entity.AccountVo">
  	SELECT ACCOUNT_ID,NICKNAME,THUMBNAILIMAGE,ACCOUNTLEVEL FROM ACCOUNT WHERE ACCOUNT_ID IN(SELECT FOLLOWER FROM FOLLOW WHERE FOLLOWING=#{ACCOUNT_ID})
  </select>
  <select id="selectFollowingList" parameterType="Integer" resultType="com.kkssj.moca.model.entity.AccountVo">
  	SELECT ACCOUNT_ID,NICKNAME,THUMBNAILIMAGE,ACCOUNTLEVEL FROM ACCOUNT WHERE ACCOUNT_ID IN(SELECT FOLLOWING FROM FOLLOW WHERE FOLLOWER=#{ACCOUNT_ID})
  </select>
  <insert id="insertFollow" parameterType="map">
  	insert into FOLLOW (FOLLOWER,FOLLOWING) VALUES (#{follower},#{following})
  </insert>
  <delete id="deleteFollow" parameterType="map">
  	delete from FOLLOW where FOLLOWER=#{follower} and FOLLOWING=#{following}
  </delete>

  
  <select id="selectProfileImageByaccountId" parameterType="Integer" resultType="com.kkssj.moca.model.entity.AccountVo">
  	SELECT ACCOUNT_ID,PROFILEIMAGE,THUMBNAILIMAGE FROM ACCOUNT WHERE ACCOUNT_ID=#{ACCOUNT_ID}
  </select>
  
  <update id="updateAccount" parameterType="com.kkssj.moca.model.entity.AccountVo" >
  	UPDATE ACCOUNT SET NICKNAME=#{nickname}, EMAIL=#{email}
  	<if test="profileImage != null">
	  	, PROFILEIMAGE=#{profileImage}, THUMBNAILIMAGE=#{thumbnailImage}  	
  	</if>
  	WHERE ACCOUNT_ID=#{account_id}
  </update>
  
  <update id="deleteAccount" parameterType="Integer">
  	UPDATE ACCOUNT SET NICKNAME="탈퇴한 회원", FOLLOWCOUNT=0, REVIEWCOUNT=0, PLATFORMTYPE=#{account_id}, 
  	PLATFORMID=0, EMAIL=null, PROFILEIMAGE=null, THUMBNAILIMAGE=null, 
  	GENDER=null, BIRTHDAY=null, BARISTA=0, ACCOUNTLEVEL=0, EXP=0 
  	WHERE ACCOUNT_ID=#{account_id}
  </update>
  
  <update id="updateAccountExp" parameterType="map">
  	UPDATE ACCOUNT SET EXP=EXP+#{EXP} WHERE ACCOUNT_ID=#{ACCOUNT_ID}
  </update>
  <insert id="insertExpLog" parameterType="map">
  	INSERT INTO EXPERIENCELOG(ACCOUNT_ID,CLASSIFICATION,EXP) VALUES(#{ACCOUNT_ID},#{CLASSIFICATION},#{EXP});
  </insert>
  <update id="updateAccountlevel" parameterType="Integer">
  	UPDATE ACCOUNT SET ACCOUNTLEVEL=ACCOUNTLEVEL+1 WHERE ACCOUNT_ID=#{ACCOUNT_ID}
  </update>
  <update id="updateAccountlevelDown" parameterType="Integer">
  	UPDATE ACCOUNT SET ACCOUNTLEVEL=ACCOUNTLEVEL-1 WHERE ACCOUNT_ID=#{ACCOUNT_ID}
  </update>
  
  <select id="selectExpLogByAccountId" parameterType="map" resultType="Integer">
  	SELECT count(*) FROM EXPERIENCELOG WHERE ACCOUNT_ID=#{ACCOUNT_ID} 
  	<if test="CLASSIFICATION!='설문조사'">
  	and DATE(LOGTIME) = DATE(now()) 
  	</if>
  	and CLASSIFICATION=#{CLASSIFICATION};
  </select>
  
  <update id="updateReviewCount" parameterType="map">
	UPDATE ACCOUNT a 
		SET a.REVIEWCOUNT = (
			SELECT count(*) 
			FROM REVIEW r
			WHERE r.ACCOUNT_ID =#{ACCOUNT_ID }
		)
	WHERE a.ACCOUNT_ID =#{ACCOUNT_ID }
  </update>
  
  <select id="selectByaccountId" parameterType="Integer" resultType="com.kkssj.moca.model.entity.AccountVo">
  	SELECT * FROM ACCOUNT WHERE ACCOUNT_ID=#{ACCOUNT_ID} and PLATFORMID!=0
  </select>
  
  <update id="updateAttendanceCount" parameterType="Integer">
  	UPDATE ACCOUNT a 
	SET a.ATTENDANCECOUNT = (
		SELECT count(*) 
		FROM EXPERIENCELOG el 
		WHERE el.CLASSIFICATION='출석' AND el.ACCOUNT_ID =#{ACCOUNT_ID }
	) 
	WHERE a.ACCOUNT_ID=#{ACCOUNT_ID }
  </update>
  
  <update id="updateFollowCount" parameterType="Integer">
  <![CDATA[
	UPDATE ACCOUNT a 
	SET a.FOLLOWCOUNT = (
		SELECT count(*) 
		FROM FOLLOW f 
		WHERE f.FOLLOWING =#{ACCOUNT_ID} AND f.FOLLOWER <> f.FOLLOWING
	)
	WHERE a.ACCOUNT_ID = #{ACCOUNT_ID}
  ]]>
  </update>
  
  <update id="updateFollowingCount" parameterType="Integer">
  <![CDATA[
	UPDATE ACCOUNT a 
	SET a.FOLLOWINGCOUNT = (
		SELECT count(*) 
		FROM FOLLOW f 
		WHERE f.FOLLOWER =#{ACCOUNT_ID} AND f.FOLLOWER <> f.FOLLOWING
	)
	WHERE a.ACCOUNT_ID = #{ACCOUNT_ID}
  ]]>
  </update>
  
  <insert id="insertBadge">
  	INSERT INTO BADGE(ACCOUNT_ID, CLASSIFICATION, BADGELEVEL, BADGEURL) VALUES(#{ACCOUNT_ID},#{CLASSIFICATION}, #{BADGELEVEL}, #{BADGEURL})
	ON DUPLICATE KEY UPDATE BADGELEVEL = #{BADGELEVEL};
  </insert>
  
  <select id="selectFollowCountByFollowing" resultType="Integer">
  <![CDATA[
  	SELECT COUNT(*) FROM FOLLOW 
  	WHERE FOLLOWING = #{FOLLOWING } AND FOLLOWING <> FOLLOWER
  	GROUP BY FOLLOWING
  ]]>
  </select>
  
  <select id="selectAttendanceCountByAccountId" resultType="Integer">
  	SELECT COUNT(*) FROM EXPERIENCELOG el WHERE el.ACCOUNT_ID = #{ACCOUNT_ID} AND el.CLASSIFICATION='출석'
  </select>
  
  <select id="selectBadgeList" parameterType="Integer" resultType="com.kkssj.moca.model.entity.BadgeVo">
  	SELECT CLASSIFICATION, BADGELEVEL, BADGEURL FROM BADGE b WHERE b.ACCOUNT_ID = #{ACCOUNT_ID }
  </select>
</mapper>
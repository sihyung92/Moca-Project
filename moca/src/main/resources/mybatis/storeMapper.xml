<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kkssj.moca.model.StoreDao">
  <select id="selectByTag" parameterType="Map" resultType="com.kkssj.moca.model.entity.StoreVo">
	  SELECT STORE_ID, ADDRESS, CATEGORY, KAKAOID, TEL, NAME, URL, ROADADDRESS, XLOCATION, YLOCATION, REVIEWCNT, VIEWCNT, TASTELEVEL, PRICELEVEL, SERVICELEVEL, MOODLEVEL, CONVENIENCELEVEL, AVERAGELEVEL, LOGOIMG, ST_DISTANCE_SPHERE(POINT(XLOCATION, YLOCATION), POINT(#{x}, #{y})) "distance" FROM STORE WHERE TAG LIKE CONCAT('%',#{keyword},'%')
    <if test="region!=null">
      AND ADDRESS LIKE CONCAT('%',#{region},'%')
    </if>
     ORDER BY ${filter}  
    <if test="filter!='distance'">
      DESC
    </if>    
  </select>
  <select id="selectByKakaoId" parameterType="INTEGER" resultType="com.kkssj.moca.model.entity.StoreVo">
  	SELECT STORE_ID, TAG, REVIEWCNT, VIEWCNT, TASTELEVEL, PRICELEVEL, SERVICELEVEL, MOODLEVEL, CONVENIENCELEVEL, AVERAGELEVEL, LOGOIMG FROM STORE WHERE KAKAOID=#{id}
  </select>
  <select id="selectOne" parameterType="Integer" resultType="com.kkssj.moca.model.entity.StoreVo">
  	SELECT * FROM STORE WHERE STORE_ID=#{val}
  </select>
  <select id="selectStoreInfoHistory" parameterType="Integer" resultType="map">
  	select a.nickname, s.renewaldate 
  	from STOREINFOHISTORY s join ACCOUNT a 
  	where s.accountid=a.account_id and s.storeid=#{STORE_ID} order by renewaldate desc limit 1
  </select>
  <select id="selectStoreImgList" parameterType="Integer" resultType="map">
  	SELECT storeImg1,storeImg2,storeImg3 FROM STORE WHERE store_id=#{STORE_ID}
  </select>
  <select id="selectStoreReviewImgList" parameterType="map" resultType="com.kkssj.moca.model.entity.ImageVo">
  	SELECT * FROM REVIEWIMAGE WHERE storeId=#{STORE_ID} order by views limit #{LIMIT}
  </select>
  <insert id="insertOne" parameterType="com.kkssj.moca.model.entity.StoreVo">
  	INSERT INTO STORE(name,kakaoid,address,roadaddress,xlocation,ylocation,url,category) VALUES(#{name},#{kakaoId},#{address},#{roadAddress},#{xLocation},#{yLocation},#{url},#{category})
  </insert>
  <insert id="insertStoreInfoHistory" parameterType="map">
  	INSERT INTO STOREINFOHISTORY(storeId,accountId,renewaldate,url,opentime,endtime,wifi,parkinglot,dayoff,tel) 
  	VALUES(#{STORE_ID},#{ACCOUNT_ID},NOW(),#{URL},#{OPENTIME},#{ENDTIME},#{WIFI},#{PARKINGLOT},#{DAYOFF},#{TEL})
  </insert>
  <update id="updateOne" parameterType="com.kkssj.moca.model.entity.StoreVo" >
  	UPDATE STORE SET wifi=#{wifi}, parkingLot=#{parkingLot}, dayOff=#{dayOff}, openTime=#{openTime}, endTime=#{endTime}, tel=#{tel}, url=#{url} WHERE store_id=#{store_Id}
  </update>
  <update id="updateLevel" parameterType="com.kkssj.moca.model.entity.StoreVo">
  	UPDATE STORE SET tasteLevel=#{tasteLevel}, priceLevel=#{priceLevel}, serviceLevel=#{serviceLevel}, 
  	moodLevel=#{moodLevel}, convenienceLevel=#{convenienceLevel}, averageLevel=#{averageLevel}
  	WHERE store_id=#{store_Id}
  </update>
  <select id="selectHitStoresList" resultType="com.kkssj.moca.model.entity.StoreVo">
  	<![CDATA[  	
	 	SELECT STORE_ID, NAME, STOREIMG1, STOREIMG2, STOREIMG3, ROADADDRESS, VIEWCNT, AVERAGELEVEL, REVIEWCNT FROM 
		(SELECT STORE_ID, NAME, STOREIMG1, STOREIMG2, STOREIMG3, ROADADDRESS, VIEWCNT, AVERAGELEVEL, REVIEWCNT, @ROWNUM:=@ROWNUM+1 AS ROWNUM, CNT FROM
		(SELECT STORE.STORE_ID, NAME, STOREIMG1, STOREIMG2, STOREIMG3, ROADADDRESS, STORE.VIEWCNT, AVERAGELEVEL, REVIEWCNT, LOGTABLE.VIEWCNT AS CNT, ST_Distance_Sphere(POINT(XLOCATION, YLOCATION), POINT(#{x}, #{y})) as DISTANCE FROM
		((SELECT STORE_ID, COUNT(*) AS VIEWCNT FROM LOG, (SELECT @ROWNUM:=0) ROWNUMTABLE WHERE CLASSIFICATION='스토어뷰' AND LOGTIME>(NOW() - INTERVAL 1 DAY) GROUP BY STORE_ID) LOGTABLE
		INNER JOIN STORE ON LOGTABLE.STORE_ID=STORE.STORE_ID) WHERE REVIEWCNT>=0 AND AVERAGELEVEL>=0 ORDER BY CNT DESC) INNERTABLE WHERE DISTANCE<=20000) OUTERTABLE WHERE ROWNUM<16
 	]]>
  </select>
  <select id="selectBestStoresList" parameterType="map" resultType="com.kkssj.moca.model.entity.StoreVo">
  	<![CDATA[
		 SELECT STORE.STORE_ID, NAME, STOREIMG1, STOREIMG2, STOREIMG3, ROADADDRESS, VIEWCNT, REVIEWCNT, AVERAGE AS AVERAGELEVEL FROM
		(SELECT STORE_ID, AVERAGE, (@ROWNUM:=@ROWNUM+1) AS ROWNUM FROM
		(SELECT STORE_ID, AVG(AVERAGELEVEL) AS AVERAGE, COUNT(AVERAGELEVEL) AS CNT FROM REVIEW, (SELECT(@ROWNUM:=0)) ROWNUMTABLE WHERE WRITEDATE>(NOW()-INTERVAL 7 DAY) GROUP BY STORE_ID) INNERTABLE
		WHERE AVERAGE>0 AND CNT>0 ORDER BY AVERAGE DESC) INNERTABLE2 INNER JOIN STORE ON INNERTABLE2.STORE_ID=STORE.STORE_ID WHERE ROWNUM<16 ORDER BY ROWNUM;
	]]>
  </select>
  <select id="selectTakeoutStoresList" parameterType="map" resultType="com.kkssj.moca.model.entity.StoreVo">
 	 <![CDATA[
	  	SELECT STORE_ID, NAME, STOREIMG1, STOREIMG2, STOREIMG3, ROADADDRESS, VIEWCNT, AVERAGELEVEL, REVIEWCNT, DISTANCE FROM
		(SELECT STORE_ID, NAME, STOREIMG1, STOREIMG2, STOREIMG3, ROADADDRESS, VIEWCNT, AVERAGELEVEL, REVIEWCNT, ST_DISTANCE_SPHERE(POINT(XLOCATION, YLOCATION), POINT(#{x}, #{y})) AS DISTANCE FROM STORE WHERE CATEGORY like '%테이크아웃%') INNERTABLE
		WHERE DISTANCE<5000 ORDER BY DISTANCE
	 ]]>
  </select>
    <select id="selectStoresNearBy" parameterType="Map" resultType="com.kkssj.moca.model.entity.StoreVo">
	 <![CDATA[
	 SELECT STORE_ID, NAME, STOREIMG1, STOREIMG2, STOREIMG3, ROADADDRESS, VIEWCNT, AVERAGELEVEL, REVIEWCNT FROM (SELECT @rownum:=@rownum+1 as rownum, STORE_ID, NAME, STOREIMG1, STOREIMG2, STOREIMG3, ROADADDRESS, VIEWCNT, AVERAGELEVEL, REVIEWCNT, ST_DISTANCE_SPHERE(POINT(XLOCATION, YLOCATION), POINT(#{x}, #{y})) as distance
	 FROM STORE, (SELECT @ROWNUM:=0) forRN HAVING distance<5000 ORDER BY AVERAGELEVEL) A WHERE rownum<16 ORDER BY rownum;
	 ]]>
  </select>
  <select id="selectByReviewTag" parameterType="java.lang.String" resultType="com.kkssj.moca.model.entity.StoreVo">
	 <![CDATA[
  	  	SELECT STORE_ID, NAME, STOREIMG1, STOREIMG2, STOREIMG3, ROADADDRESS, VIEWCNT, AVERAGELEVEL FROM
	  	(SELECT  STORE_ID, NAME, STOREIMG1, STOREIMG2, STOREIMG3, ROADADDRESS, VIEWCNT, AVERAGELEVEL, REVIEWCNT,@rownum:=@rownum+1 as rownum
		FROM (SELECT STORE.STORE_ID,cnt, NAME, STOREIMG1, STOREIMG2, STOREIMG3, ROADADDRESS, VIEWCNT, AVERAGELEVEL, REVIEWCNT FROM (SELECT store_id, COUNT(${value}) as cnt FROM TAGS GROUP BY store_id HAVING cnt>0)innerTable
		INNER JOIN STORE ON innerTable.store_id = STORE.STORE_ID, (SELECT @ROWNUM:=0)forRN)innerTable2 ORDER BY AVERAGELEVEL DESC )innerTable3
		WHERE rownum<16 ORDER BY rownum
	 ]]>
  </select> 
</mapper>